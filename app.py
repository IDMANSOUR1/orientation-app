import streamlit as st
import os
from openai import OpenAI
import json

st.set_page_config(page_title="Orientation Coll√®ge Maroc", layout="centered")
st.title("üéì Test d'Orientation Implicite")

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

if "etape" not in st.session_state:
    st.session_state["etape"] = "bloc1"

# === Bloc 1 ===
if st.session_state["etape"] == "bloc1":
    st.header("üß† Bloc 1 : Situations g√©n√©rales")
    prenom = st.text_input("Pr√©nom de l'√©l√®ve :", key="prenom")

    questions_bloc1 = {
    "Q1": ("Ton professeur te donne un expos√© √† faire sur un sujet que tu ne connais pas du tout. Tu as 3 jours. Tu :", [
        "Organises les id√©es en plan avant de commencer √† chercher",
        "Commences par √©crire des phrases pour voir ce que tu en penses",
        "Dessines un sch√©ma ou une carte mentale pour explorer le sujet"
    ]),
    "Q2": ("Un camarade bloque sur un exercice. Il te demande de l‚Äôaide. Tu :", [
        "R√©explique la r√®gle ou la m√©thode",
        "Reformules le probl√®me avec tes propres mots",
        "Inventes une analogie ou une m√©taphore pour l‚Äôaider"
    ]),
    "Q3": ("En classe, ton professeur corrige un devoir en silence au tableau. Tu pr√©f√®res :", [
        "Que ce soit bien structur√©, √©tape par √©tape",
        "Que ce soit expliqu√© √† voix haute avec des exemples",
        "Qu‚Äôil donne plusieurs fa√ßons de r√©soudre pour comparer"
    ]),
    "Q4": ("Tu dois pr√©parer un devoir not√©. Tu as le choix :", [
        "Un probl√®me complexe avec une seule bonne solution",
        "Une dissertation ou un texte √† r√©diger librement",
        "Un projet cr√©atif √† construire ou pr√©senter"
    ]),
    "Q5": ("Pendant un cours, ton prof pose une question difficile. Tu :", [
        "Lances-toi, m√™me si tu n‚Äôes pas s√ªr",
        "Attends d‚Äô√™tre vraiment certain(e) pour r√©pondre",
        "Pr√©f√©res noter la question pour la revoir chez toi"
    ]),
    "Q6": ("Tu re√ßois un devoir corrig√© avec cette remarque : 'Ta m√©thode n‚Äô√©tait pas la plus rapide, mais elle est originale.' Tu te dis :", [
        "Je vais chercher la m√©thode la plus logique la prochaine fois",
        "Je suis fier(e), √ßa veut dire que j‚Äôai r√©fl√©chi autrement",
        "Je me demande si mon style d‚Äôapproche est un atout ou une faiblesse"
    ]),
    "Q7": ("Tu as une heure de libert√© dans un CDI avec Internet. Tu fais quoi ?", [
        "Cherches un tuto sur un sujet qui te fascine (sciences, tech, etc.)",
        "Lis un article, un blog, ou regardes une vid√©o d‚Äôanalyse",
        "Dessines, √©cris ou pr√©pares un projet personnel"
    ]),
    "Q8": ("Un adulte te dit : 'Tu es quelqu‚Äôun de tr√®s m√©thodique.' Tu penses :", [
        "Oui, j‚Äôaime bien que tout soit structur√©",
        "Non, je pr√©f√®re laisser venir les id√©es naturellement",
        "Je suis un peu des deux, selon les moments"
    ]),
    "Q9": ("Un nouveau sujet te para√Æt difficile √† comprendre. Tu pr√©f√®res :", [
        "Faire un exercice ou un exemple tout de suite pour tester ta compr√©hension",
        "Lire plusieurs fois le cours pour bien assimiler",
        "En discuter avec quelqu‚Äôun pour clarifier tes id√©es"
    ]),
    "Q10": ("On te propose de participer √† un atelier pendant une semaine. Tu choisis :", [
        "Construire un objet ou une maquette",
        "√âcrire un sc√©nario, un article ou une histoire",
        "R√©soudre des √©nigmes ou d√©fis logiques en √©quipe"
    ]),
    "Q11": ("Tu dois corriger un travail. Tu es plus attentif(ve) √† :", [
        "Si le raisonnement est juste, m√™me si c‚Äôest mal pr√©sent√©",
        "Si le texte est clair et agr√©able √† lire",
        "Si l‚Äôid√©e est originale ou diff√©rente des autres"
    ]),
    "Q12": ("Pendant un expos√© en groupe, tu pr√©f√®res :", [
        "Faire les recherches et organiser le contenu",
        "√âcrire le texte ou faire la pr√©sentation orale",
        "Concevoir un support visuel ou interactif"
    ]),
    "Q13": ("Un prof te donne une consigne volontairement vague pour un projet libre. Tu ressens :", [
        "Le besoin de lui demander des pr√©cisions",
        "Une envie de proposer quelque chose d‚Äôoriginal",
        "De l‚Äôh√©sitation, mais tu finis par improviser"
    ]),
    "Q14": ("Tu assistes √† un d√©bat entre deux √©l√®ves. Tu observes surtout :", [
        "Qui a les meilleurs arguments logiques",
        "Qui s‚Äôexprime le plus clairement",
        "Qui a des id√©es diff√©rentes et surprenantes"
    ]),
    "Q15": ("Ton professeur te demande de r√©sumer un texte long. Tu commences par :", [
        "Identifier les id√©es principales et les structurer",
        "Reformuler phrase par phrase avec tes mots",
        "Cr√©er un plan visuel ou une carte mentale"
    ])
}


    reponses_bloc1 = {}
    for key, (question, options) in questions_bloc1.items():
        choix = st.radio(question, options, key=key)
        if choix:
            reponses_bloc1[key] = choix

    if st.button("‚û°Ô∏è Suivant"):
        if len(reponses_bloc1) < len(questions_bloc1) or not prenom.strip():
            st.warning("Merci de r√©pondre √† toutes les questions et d‚Äôentrer ton pr√©nom.")
        else:
            prenom_nettoye = prenom.strip()
            with st.spinner("Analyse du profil..."):
                try:
                    prompt = f"Voici les r√©ponses d‚Äôun √©l√®ve marocain. D√©duis son profil dominant : scientifique, litt√©raire ou mixte. Pr√©nom : {prenom_nettoye}\n"
                    for q, r in reponses_bloc1.items():
                        prompt += f"- {q} : {r}\n"
                    prompt += "R√©ponds en JSON : { \"orientation\": \"...\", \"resume\": \"...\" }"

                    response = client.chat.completions.create(
                        model="gpt-4",
                        messages=[{"role": "user", "content": prompt}],
                        temperature=0.7
                    )
                    result_json = json.loads(response.choices[0].message.content)
                    st.session_state["orientation"] = result_json["orientation"]
                    st.session_state["resume"] = result_json["resume"]
                    st.session_state["prenom_resultat"] = prenom_nettoye
                    st.session_state["etape"] = "bloc2"
                    st.rerun()
                except Exception as e:
                    st.error(f"Erreur GPT : {str(e)}")

# === Bloc 2 ===
elif st.session_state["etape"] == "bloc2":
    st.header("üìò Bloc 2 : Questions cibl√©es")

    profil = st.session_state["orientation"]
    st.success(f"üìö Profil d√©tect√© : {profil}")
    st.markdown(f"**R√©sum√© Bloc 1 :** _{st.session_state['resume']}_")
    st.markdown(f"**Pr√©nom :** {st.session_state['prenom_resultat']}")

  
    scientifique_qs = [
    ("Tu d√©couvres un nouveau concept en physique. Tu pr√©f√®res :", ["Lire des explications th√©oriques", "Regarder une vid√©o avec des exp√©riences", "Faire toi-m√™me une petite exp√©rience"]),
    ("On te demande de cr√©er une affiche sur un ph√©nom√®ne scientifique. Tu commences par :", ["Rechercher des donn√©es fiables", "Imaginer une exp√©rience √† montrer", "Faire un sch√©ma clair"]),
    ("Tu dois r√©soudre un probl√®me de maths inconnu. Tu :", ["Appliques une m√©thode connue", "Essaies plusieurs pistes logiques", "Demandes un exemple similaire"]),
    ("En sciences, ce qui t‚Äôint√©resse le plus c‚Äôest :", ["Comprendre les lois naturelles", "Trouver des applications concr√®tes", "Imaginer comment am√©liorer les choses"]),
    ("Quand tu lis un probl√®me scientifique, tu :", ["D√©taille chaque donn√©e", "Visualises le probl√®me dans ta t√™te", "Te l‚Äôexpliques √† haute voix"]),
    ("Tu dois cr√©er un projet en sciences. Tu pr√©f√®res :", ["Un mod√®le r√©duit d‚Äôun ph√©nom√®ne", "Une recherche documentaire pr√©cise", "Un expos√© oral avec donn√©es chiffr√©es"]),
    ("On te propose un stage en laboratoire. Tu es surtout attir√© par :", ["Manipuler des instruments", "Observer et noter les r√©sultats", "√âmettre des hypoth√®ses √† tester"]),
    ("En math√©matiques, tu ressens le plus de satisfaction quand :", ["Tu trouves le bon raisonnement", "Tu expliques la solution √† d'autres", "Tu d√©couvres une m√©thode nouvelle"]),
    ("Tu es face √† un syst√®me complexe. Tu :", ["Le d√©composes en sous-√©l√©ments", "Cherches les relations entre les parties", "Simules son fonctionnement"]),
    ("Tu dois organiser une sortie √©ducative. Tu proposes :", ["Une visite √† un mus√©e scientifique", "Un atelier de robotique", "Une exp√©rience encadr√©e en classe"])
]



    literaire_qs = [
    ("Tu dois √©crire une lettre √† un personnage historique. Tu :", ["Imagines son contexte", "Utilises un langage soutenu", "Racontes une situation fictive"]),
    ("On te demande de cr√©er un article de blog. Tu pr√©f√®res :", ["Argumenter sur un sujet d‚Äôactualit√©", "T√©moigner d‚Äôune exp√©rience personnelle", "Raconter une histoire touchante"]),
    ("En classe de fran√ßais, tu pr√©f√®res :", ["Les d√©bats", "L‚Äôanalyse de texte", "L‚Äô√©criture d‚Äôinvention"]),
    ("Tu lis un texte ancien. Tu es curieux de :", ["L‚Äô√©poque et son contexte", "Le style de l‚Äôauteur", "La mani√®re dont on peut l‚Äôadapter aujourd‚Äôhui"]),
    ("Tu dois d√©fendre une id√©e √† l‚Äô√©crit. Tu commences par :", ["Structurer tes arguments", "Trouver des exemples forts", "Choisir un ton percutant"]),
    ("En cours de langue, tu aimes :", ["Traduire avec pr√©cision", "Jouer avec les mots et expressions", "√âcrire des dialogues ou des r√©cits"]),
    ("Un film ou un livre t‚Äôa touch√©. Tu en parles en mettant en avant :", ["Le message profond", "Les √©motions v√©cues", "Le style de narration"]),
    ("Tu dois cr√©er un podcast. Tu veux :", ["Partager une id√©e originale", "Interviewer des gens", "Lire un texte de ta cr√©ation"]),
    ("√Ä la biblioth√®que, tu cherches plut√¥t :", ["Des romans classiques", "Des livres d‚Äôanalyse ou de critique", "Des recueils de po√©sie ou nouvelles"]),
    ("Tu dois cr√©er un spectacle de fin d‚Äôann√©e. Tu veux :", ["√âcrire le sc√©nario", "Jouer un r√¥le marquant", "Cr√©er la mise en sc√®ne"])
]



    


    if profil == "scientifique":
        questions = scientifique_qs
    elif profil == "litt√©raire":
        questions = literaire_qs
    else:
        questions = scientifique_qs[:2] + literaire_qs[:1]

    reponses_bloc2 = {}
    for idx, (question, options) in enumerate(questions):
        qkey = f"B2_Q{idx+1}"
        choix = st.radio(f"{question}", options, key=qkey)
        reponses_bloc2[qkey] = choix

    if st.button("üìä Analyse finale"):
        with st.spinner("Analyse des r√©ponses cibl√©es..."):
            try:
                synthese_prompt = f"Profil : {profil}\nPr√©nom : {st.session_state['prenom_resultat']}\nR√©ponses Bloc 2 :\n"
                for q, r in reponses_bloc2.items():
                    synthese_prompt += f"- {q} : {r}\n"

                synthese_prompt += """Analyse le fonctionnement cognitif de l‚Äô√©l√®ve et propose un conseil d‚Äôorientation adapt√©.Ta mission est de r√©diger une **r√©ponse br√®ve, claire et motivante** qui :
1. Indique explicitement √† l'√©l√®ve quel est son profil (ex: ¬´ Ton profil est plut√¥t scientifique‚Ä¶ ¬ª)
2. Met en valeur 2 ou 3 de ses forces principales (en lien avec les r√©ponses)
3. Sugg√®re 2 √† 3 pistes ou domaines adapt√©s √† ce profil
4. Termine par un conseil simple, personnalis√© et encourageant

‚ö†Ô∏è Format attendu :
- 4 √† 6 phrases max
- Style fluide, chaleureux, sans jargon scolaire
- Parle directement √† l‚Äô√©l√®ve (avec ¬´ tu ¬ª ou son pr√©nom)

Objectif : lui donner confiance, clart√© et envie de s‚Äôinvestir dans les domaines propos√©s."""

                completion = client.chat.completions.create(
                    model="gpt-4",
                    messages=[{"role": "user", "content": synthese_prompt}],
                    temperature=0.7
                )
                st.markdown("### üß† Synth√®se finale")
                st.markdown(completion.choices[0].message.content)
            except Exception as e:
                st.error(f"Erreur GPT : {str(e)}")
